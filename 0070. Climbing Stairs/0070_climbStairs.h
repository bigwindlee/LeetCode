#pragma once

/*
70. 爬楼梯
假设你正在爬楼梯。需要 n 阶你才能到达楼顶。
每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？
*/

/*
思路分析：动规
1一个台阶有1种方法；2个台阶有2种方法；从第三个台阶开始，它的上一跳有2种可能：在n-1处，或者在n-2处；
也就是递推公式：dp[i] = dp[i-1] + dp[i-2]
本题只需要维护上一跳的2个状态，所有不需要dp数组；用2个变量a/b来维护状态即可！
*/
class Solution {
public:
    int climbStairs(int n)
    {
        int a = 1, b = 1;
        for (int i = 2; i <= n; ++i) {
            // 迭代：a/b向右边各走一步
            b += a;
            a = b - a;
        }
        return b;
    }
};